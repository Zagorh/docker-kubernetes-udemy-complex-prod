sudo: required
services:
  - docker
env:
  global:
    - SHA=$(git rev-parse HEAD)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  - openssl aes-256-cbc -K $encrypted_b0d01fafaafe_key -iv $encrypted_b0d01fafaafe_iv -in service-account.json.enc -out service-account.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project multi-k8s-266317 #Project ID (not the name!)
  - gcloud config set compute/zone europe-west1-b #Cluster location
  - gcloud container clusters get-credentials standard-cluster-1 #Cluster name
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t zagorh/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true zagorh/react-test npm test

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master

# Steps:
#  - Install Google Cloud SDK CLI
#  - Configure the SDK without Google Cloud auth info
#  - Login to Docker CLI
#  - Build the 'test' version of multi-client
#  - Run tests
#  - If tests are successful, run a script to deploy newest images
#  - Build all our images, tag each one, push each to docker hub
#  - Apply all configs in the 'k8s' folder
#  - Imperatively set latest images on each deployment


# To create a Service Account:
#  - Create a Service Account (IAM & Admin > Service Accounts > Create service account)
#  - Download service account credentials in a json file
#  - Download and install the Travis CLI
#  - Encrypt and update the json file to our Travis account
#  - In travis.yml, add code to unencrypt the json file and load it into GCloud SDK
#  - Delete the original json file and never commit it to the repository!!